ltl singleBallForever: <> ([] (((ballsInTheAir+ballsWithPlayer)==1)))
ltl initiallyNoBallsMustNotFailForCredit: (((ballsInTheAir+ballsWithPlayer)==0)) && ([] (1))
ltl allBallsCannotBeConstantMustNotFailForCredit: (((! ([] (((ballsInTheAir+ballsWithPlayer)==0)))) && (! ([] (((ballsInTheAir+ballsWithPlayer)==1))))) && (! ([] (((ballsInTheAir+ballsWithPlayer)==2))))) && ([] (1))
starting claim 3
using statement merging
MSC: ~G line 3
  1:	proc  - (singleBallForever:1) _spin_nvr.tmp:3 (state 1)	[(!(((ballsInTheAir+ballsWithPlayer)==1)))]

Never claim moves to line 3	[(!(((ballsInTheAir+ballsWithPlayer)==1)))]
Starting Referee with pid 2
  2:	proc  0 (:init::1) Pingpong.pml:68 (state 1)	[(run Referee())]

MSC: ~G line 8
  3:	proc  - (singleBallForever:1) _spin_nvr.tmp:8 (state 8)	[(1)]

Never claim moves to line 8	[(1)]
Starting Player with pid 3
  4:	proc  0 (:init::1) Pingpong.pml:69 (state 2)	[(run Player(0))]

MSC: ~G line 3
  5:	proc  - (singleBallForever:1) _spin_nvr.tmp:3 (state 1)	[(!(((ballsInTheAir+ballsWithPlayer)==1)))]

Never claim moves to line 3	[(!(((ballsInTheAir+ballsWithPlayer)==1)))]
Starting Player with pid 4
  6:	proc  0 (:init::1) Pingpong.pml:70 (state 3)	[(run Player(1))]

MSC: ~G line 8
  7:	proc  - (singleBallForever:1) _spin_nvr.tmp:8 (state 8)	[(1)]

Never claim moves to line 8	[(1)]
  8:	proc  1 (Referee:1) Pingpong.pml:43 (state 1)	[ballsInTheAir = (ballsInTheAir+1)]
		ballsInTheAir = 1

  9:	proc  1 (Referee:1) Pingpong.pml:44 (state -)	[values: 1!BALL]
  9:	proc  1 (Referee:1) Pingpong.pml:44 (state 2)	[s!BALL]

 10:	proc  3 (Player:1) Pingpong.pml:54 (state 5)	[ballsWithPlayer = (ballsWithPlayer+1)]	<merge 12 now @6>
		ballsWithPlayer = 1

 10:	proc  3 (Player:1) Pingpong.pml:55 (state 6)	[getIt[i] = 1]	<merge 12 now @7>
		ballsWithPlayer = 1
		getIt[0] = 0
		getIt[1] = 1

 10:	proc  3 (Player:1) Pingpong.pml:56 (state 7)	[getIt[(1-i)] = 0]	<merge 12 now @12>
		ballsWithPlayer = 1
		getIt[0] = 0
		getIt[1] = 1

MSC: ~G line 4
 11:	proc  - (singleBallForever:1) _spin_nvr.tmp:4 (state 3)	[(1)]

Never claim moves to line 4	[(1)]
 12:	proc  3 (Player:1) Pingpong.pml:61 (state -)	[values: 1!BALL]
 12:	proc  3 (Player:1) Pingpong.pml:61 (state 11)	[s!BALL]

spin: trail ends after 12 steps
#processes: 4
		ballsInTheAir = 1
		ballsWithPlayer = 1
		getIt[0] = 0
		getIt[1] = 1
 12:	proc  3 (Player:1) Pingpong.pml:49 (state 13)
		Player(3):i = 1
 12:	proc  2 (Player:1) Pingpong.pml:49 (state 13)
		Player(2):i = 0
 12:	proc  1 (Referee:1) Pingpong.pml:46 (state 4)
 12:	proc  0 (:init::1) Pingpong.pml:71 (state 4)
MSC: ~G line 2
 12:	proc  - (singleBallForever:1) _spin_nvr.tmp:2 (state 5)
4 processes created
Exit-Status 0
