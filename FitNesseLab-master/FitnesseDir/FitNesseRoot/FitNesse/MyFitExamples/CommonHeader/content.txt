!include .FitNesse.MyFitExamples.CommonInfo


'''WARNING''': Make sure to rerun cobertura instrumentation after (a) updating the Java sources of the code that is tested, (b) 
disabling cobertura classpath definitions below, or (c) removing the instrumented classes (in /target/generated-classes). 
Before rerunning istrumentation, you may also have to do a "mvn clean" followed by "Project -> Clean" in Eclipse to delete 
any stale project state. Otherwise Fitnesse will find old instrumented classes in the classpath rather than the newly compiled classes because of the given ordering of classpath definitions in this header file. Fitness will use the first class files it will find in the classpath sequence. You can avoid this behavior by giving up coverage analysis: simply disable coverage analysis temporarily by commenting out the two /target/generated-classes path statements below. But to re-run coverage analysis again, you must re-enable them and rerun cobertura instrumentation. Remember cobertura instrumentation can be run via Maven ("mvn cobertura:cobertura") or directly via the cobertura-instrument script from command line. You can also simply remove instrumentation classes (clear contents of target/generated-classes) by 'mvn clean' and NOT rerun cobartura instrumentation: this allows Fitnesse to find and use the original class files in target/classes. 

| Import |
| fitnesse.fixtures |

Classpath order is important. Cobertura first, then directory for instrumented classes, then for original classes. 
Classpaths are relative to !-FitnesseDir-! for running tests directly from Fitnesse server or from JUnit !-FitnesseRunner-!; they are relative to project directory for Maven builds. 
Therefore both options are specified. 

Paths to cobertura jar file and some dependent libraries:

# Old cobertura files
#!path cobertura-2.0.3/cobertura-2.0.3.jar
#!path FitnesseDir/cobertura-2.0.3/cobertura-2.0.3.jar
!path cobertura-2.1.1/cobertura-2.1.1.jar
!path FitnesseDir/cobertura-2.1.1/cobertura-2.1.1.jar

Required libs for cobertura-2.1.1 - these libs need to be on the classpath for cobertura-2.1.1 to work with last version of Fitnesse.
Coberture 2.1.1 works if logging is diabled by including a slf4j-nop binding. 
# These are not needed any more
#!path cobertura-2.1.1/lib/slf4j-api-1.7.5.jar
#!path FitnesseDir/cobertura-2.1.1/lib/slf4j-api-1.7.5.jar
#!path FitnesseDir/slf4j-nop-1.7.21.jar
#!path FitnesseDir/slf4j-nop-1.7.25.jar
#!path FitnesseDir/slf4j-simple-1.7.25.jar

These dependencies are for standalone Fitnesse:
!path cobertura-2.1.1/lib/slf4j-nop-1.7.25.jar
!path cobertura-2.1.1/lib/slf4j-api-1.7.25.jar

These dependencies are for JUnit !-FitnesseRunner-!:
!path FitnesseDir/cobertura-2.1.1/lib/slf4j-api-1.7.25.jar
!path FitnesseDir/cobertura-2.1.1/lib/slf4j-nop-1.7.25.jar


'''IMPORTANT: ABSOLUTE PATH WARNING!'''

System property net.sourceforge.cobertura.datafile defines path to cobertura.ser metadata file, generated by cobertura instrumentation and updated during test execution.
This path must be absolute to work both with Maven, by directly running from Fitnesse server, and with JUnit FitnesseRunner. Make sure to update this path by replacing 
!-/Users/erdogmush/dev-! with the proper path prefix. 

| System property setter fixture |
| key | value |
| net.sourceforge.cobertura.datafile | /Users/erdogmush/dev/FitNesseLab/target/cobertura/cobertura.ser |

Paths to instrumented class files directory - comment these two paths out if you're not using coverage analysis. If you leave them in, you must run cobertura instrumentation after updating Java sources. 
!path ../target/generated-classes/cobertura
!path target/generated-classes/cobertura

Paths to original class files directory:
!path ../target/classes
!path target/classes

